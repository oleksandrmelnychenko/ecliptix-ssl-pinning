# Windows cross-compilation environment using MinGW-w64
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    python3 \
    python3-pip \
    pkg-config \
    curl \
    unzip \
    mingw-w64 \
    mingw-w64-tools \
    wine \
    bash \
    && rm -rf /var/lib/apt/lists/*

# Install OpenSSL for Windows (cross-compilation)
RUN apt-get update && apt-get install -y \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Build OpenSSL for Windows target
WORKDIR /tmp
RUN curl -L https://www.openssl.org/source/openssl-3.2.0.tar.gz | tar xz && \
    cd openssl-3.2.0 && \
    ./Configure mingw64 --cross-compile-prefix=x86_64-w64-mingw32- \
        --prefix=/usr/x86_64-w64-mingw32 \
        --openssldir=/usr/x86_64-w64-mingw32/ssl && \
    make -j$(nproc) && \
    make install_sw && \
    cd .. && rm -rf openssl-3.2.0

# Build libsodium for Windows target
RUN curl -L https://download.libsodium.org/libsodium/releases/libsodium-1.0.20.tar.gz | tar xz && \
    cd libsodium-1.0.20 && \
    ./configure --host=x86_64-w64-mingw32 \
        --prefix=/usr/x86_64-w64-mingw32 \
        --enable-static --disable-shared && \
    make -j$(nproc) && \
    make install && \
    cd .. && rm -rf libsodium-1.0.20

# Create CMake toolchain file for Windows cross-compilation
RUN mkdir -p /usr/share/cmake
COPY cmake/windows-toolchain.cmake /usr/share/cmake/

WORKDIR /workspace
CMD ["/bin/bash"]