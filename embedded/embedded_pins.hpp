#pragma once
/*
 * Ecliptix SSL Pinning Validation
 * Auto-generated PIN definitions
 */

#include <cstdint>
#include <array>

namespace ecliptix::pinning {

constexpr uint8_t PIN_XOR_KEY = 0x84;

// Primary PIN (SHA-384 of server public key)
constexpr std::array<uint8_t, 48> PRIMARY_PIN = {
    0x57, 0x0f, 0xd6, 0x29, 0x02, 0x7b, 0xcc, 0x77, 0xcd, 0x97, 0xa5, 0xcc,
    0x19, 0x48, 0x09, 0xdb, 0x27, 0x6d, 0xdf, 0xe0, 0xb1, 0xd7, 0x05, 0xee,
    0x42, 0x30, 0x95, 0x79, 0x1a, 0xc2, 0xe1, 0x48, 0xb2, 0x18, 0x97, 0x6a,
    0xb7, 0x11, 0x07, 0x4e, 0xc7, 0x0b, 0xff, 0xe8, 0x36, 0xe3, 0xee, 0x83
};

// Backup PINs for rotation
constexpr std::array<std::array<uint8_t, 48>, 3> BACKUP_PINS = {{
    {     0xe0, 0xca, 0x9e, 0x36, 0x41, 0x80, 0x19, 0xf7, 0xb6, 0x20, 0x5a, 0xa1,
    0x1a, 0x43, 0xd2, 0x3a, 0xdc, 0x50, 0x6c, 0x4e, 0xc1, 0x46, 0xef, 0xc4,
    0xc7, 0x84, 0x07, 0xbf, 0x7a, 0x38, 0xf4, 0xd1, 0x24, 0x30, 0x32, 0xf5,
    0x5b, 0xc2, 0x44, 0xd0, 0x2a, 0x5f, 0x35, 0xa8, 0x8a, 0xf2, 0xa2, 0x8e },
    {     0x3d, 0xd9, 0xf5, 0x89, 0xdf, 0x31, 0xad, 0x0d, 0x13, 0x31, 0xa5, 0x11,
    0x46, 0x1f, 0xa5, 0x76, 0x1f, 0xee, 0x5d, 0x71, 0x73, 0x3a, 0x81, 0x16,
    0x8c, 0xdf, 0x68, 0xe0, 0xf7, 0x70, 0x70, 0x17, 0xc0, 0x79, 0x5e, 0x3b,
    0x0c, 0x60, 0xdd, 0xcf, 0x95, 0xc2, 0x43, 0x32, 0xb3, 0xf7, 0xab, 0xa1 },
    {     0xdd, 0x7d, 0x4a, 0xe5, 0x62, 0x9f, 0x60, 0x48, 0xba, 0x42, 0x6c, 0x78,
    0x96, 0xea, 0x0e, 0xe1, 0x0a, 0x9b, 0x0a, 0x60, 0x2e, 0xf6, 0xa5, 0xb3,
    0x5e, 0x60, 0x53, 0x61, 0xf3, 0xdc, 0xc3, 0x71, 0x4d, 0x67, 0xb8, 0x29,
    0x9e, 0x6b, 0xf2, 0xea, 0x68, 0xde, 0xf8, 0xdc, 0xe3, 0x66, 0xd4, 0x57 }
}};

} // namespace ecliptix::pinning
